(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{481:function(e,a,t){"use strict";t.r(a);var s=t(2),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("#daily Journal")]),e._v(" "),t("p",[e._v("##https://github.com/JohnVWebb/js-test-basics")]),e._v(" "),t("p",[e._v("###Intro To Javascript")]),e._v(" "),t("p",[e._v("1.What is Scope ?")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("Scope refers to where certain variables may be available to use within your code.\n")])])]),t("p",[e._v("2.What is Hoisting ?")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("variables and functions that are declared later in the code are moved to the top of their respective scopes and executed in that order.\n")])])]),t("p",[e._v("3.In what cases might you use let vs const vs var?")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("const - will be used in the event you need a variable that will never change.\n\nlet - is the current standard for javascript variables because they have a local scope instead of global you don't run into issues of variables updating across scopes when not intended.\n\nvar - is the original method of declaring variables in javascript. var has a global scope outside of a function and local within functions. this can cause issues with variables you intend to be local interacting with global variables.")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);